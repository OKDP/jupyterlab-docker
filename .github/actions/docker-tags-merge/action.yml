name: 'Multi-arch Image Tagger'
description: 'Applies tags and prepares amd64 and arm64 images for creating multi-arch manifests'
inputs:
  image:
    description: Image name with tag (including registry/repo, e.g. docker.io/myuser/myimage:mytag)
    required: true
  registry:
    description: The registry used to push images into
    required: true
  platform_amd64:
    description: Target image platform for AMD64 architecture
    required: true
  platform_arm64:
    description: Target image platform for AMD64 architecture
    required: true

runs:
  using: "composite"
  steps:

    - name: Prepare image push 📦
      run: |
        # The short image name (without tag) is necessary to push to the registry
        echo "SHORT_IMAGE_NAME=${{ inputs.image }}" | awk -F: '{print $1}' >> $GITHUB_ENV
      shell: bash

    # Pull the images locally for the two platforms: amd64 and arm64
    - name: Pull ${{ inputs.image }} image for ${{ inputs.platform_amd64 }} platform ⬇️
      run: |
        docker pull ${{ inputs.registry }}/$OWNER/${{ inputs.image }}-${{ inputs.platform_amd64 }}
      shell: bash

    - name: Pull ${{ inputs.image }} image for ${{ inputs.platform_arm64 }} platform ⬇️
      run: |
        docker pull ${{ inputs.registry }}/$OWNER/${{ inputs.image }}-${{ inputs.platform_arm64 }}
      shell: bash

    - name: Apply tags to ${{ inputs.image }} image and platform ${{ inputs.platform_amd64 }} 🏷
      run: |
        python3 -m okdp.extension.tagging.apply_tags --image-name ${{ inputs.image }} \
                --registry ${{ inputs.registry }} \
                --owner $OWNER \
                --platform ${{ inputs.platform_amd64 }}
      shell: bash

    - name: Fetch all tags for ${{ inputs.image }} image and platform ${{ inputs.platform_amd64 }} 🏷
      run: |
        tags=$(docker images ${{ inputs.registry }}/$OWNER/$SHORT_IMAGE_NAME \
          --format "{{.Repository}}:{{.Tag}}" \
          | grep -v -- "-${{ inputs.platform_arm64 }}$" \
          | sed "s/-${{ inputs.platform_amd64 }}$//" \
          | tr '\n' ' ')
        echo "IMAGE_TAGS=$tags" >> $GITHUB_ENV
      shell: bash

    - name: Apply tags to ${{ inputs.image }} image and platform ${{ inputs.platform_arm64 }} 🏷
      run: |
        for tag in $IMAGE_TAGS
        do
          docker tag ${{ inputs.registry }}/$OWNER/${{ inputs.image }}-${{ inputs.platform_arm64 }} ${tag}-${{ inputs.platform_arm64 }}
        done
      shell: bash

