name: Pull the image with it's latest tag, apply new tags and push back to container registry

on:
  workflow_call:
    inputs:
      image:
        description: Image name
        required: true
        type: string
      registry:
        description: The list of tags space separated values
        required: false
        type: string
        default: "ghcr.io"
      runs-on:
        description: GitHub Actions Runner image
        required: true
        type: string
    secrets:
      registry_username:
        required: true
      registry_token:
        required: true

defaults:
  run:
    working-directory: ./docker-stacks
    
jobs:
  tag-push:
    runs-on: ${{ inputs.runs-on }}
    name: ${{ inputs.image }}

    steps:
      - name: Checkout Repo ⚡️
        uses: actions/checkout@v4
      
      - name: Setup dev env patchs 📦
        uses: ./.github/actions/install-patchs-and-extension

      - name: Create dev environment 📦
        uses: ./docker-stacks/.github/actions/create-dev-env
  
      - name: Login to Registry 🔐
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.registry }}
          username: ${{ secrets.registry_username }}
          password: ${{ secrets.registry_token }}

      - name: Pull latest tag image 📥
        run: docker pull ${{ inputs.registry }}/${{ github.repository_owner }}/${{ inputs.image }}
        shell: bash

      - name: Apply tags to the loaded image 🏷
        run: python3 -m extension.tagging.apply_tags --short-image-name ${{ inputs.image }} --registry ${{ inputs.registry }} --owner ${{ github.repository_owner }}
      
      - name: Prepare image push 📦
        run: |
          # The short image name (without tag) is necessary to push to the registry
          echo "SHORT_IMAGE_NAME=${{ inputs.image }}" | awk -F: '{print $1}' >> $GITHUB_ENV
        shell: bash

      - name: Push Images to Registry 📤
        run: docker push --all-tags ${{ inputs.registry }}/${{ github.repository_owner }}/$SHORT_IMAGE_NAME
        shell: bash
