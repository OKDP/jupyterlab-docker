################ Version Compatibility Matrix ######################
##### SECTION USED TO GET COMPATIBLE VERSIONS ######################
##### DONT PUT python_version IN AN ARRAY - JAVA COMPATIBILITY #####
####### ENRICH WITH NEWER VERSIONS #################################
compatibility-matrix:
  # Maximum python version supported by spark-3.2.x: 3.9
  # Java support: 8/11
  - python_version: 3.9
    spark_version: [3.2.1, 3.2.2, 3.2.3, 3.2.4]
    java_version: [11]
    scala_version: [2.12, 2.13]
    hadoop_version: 3.2
    spark_download_url: https://archive.apache.org/dist/spark/
  # Maximum python version supported by spark-3.3.x: 3.10
  # Java support: 8/11/17
  - python_version: '3.10'
    spark_version: [3.3.1, 3.3.2, 3.3.3, 3.3.4]
    java_version: [17]
    scala_version: [2.12, 2.13]
    hadoop_version: 3
    spark_download_url: https://archive.apache.org/dist/spark/
  # Maximum python version supported by spark-3.4.x: 3.11
  # Java support: 8/11/17
  - python_version: 3.11
    spark_version: [3.4.1, 3.4.2]
    java_version: [17]
    scala_version: [2.12, 2.13]
    hadoop_version: 3
    spark_download_url: https://archive.apache.org/dist/spark/
  # https://spark.apache.org/releases/spark-release-3-5-0.html
  # Minimum supported java version: 17/21
  - python_version: 3.11
    spark_version: [3.5.0]
    java_version: [17]
    scala_version: [2.12, 2.13]
    hadoop_version: 3
    spark_download_url: https://archive.apache.org/dist/spark/
### Ovveride the matrix above by providing the versions to build
### 1- The build-matrix is empty: build with all possible combintations
### 2- Override specific versions: build with all possible combinations which are compatible with that specific versions
### 3- The versions not present on compatibility-matrix are ignored
build-matrix:
  python_version: ['3.9', '3.10', '3.11']
  spark_version: [3.2.4, 3.3.2, 3.3.4, 3.4.2, 3.5.0]
  java_version: [11, 17]
  scala_version: [2.12]

